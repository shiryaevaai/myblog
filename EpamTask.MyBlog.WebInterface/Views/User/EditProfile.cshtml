@model EpamTask.MyBlog.WebInterface.Models.EditUserModel

@{
    ViewBag.Title = "EditProfile";
}

<h2>Редактировать профиль</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.ID)

        @Html.HiddenFor(model => model.HasAvatar)

        @Html.HiddenFor(model => model.BlogUserLogin)

        <div class="form-group">
            @Html.LabelFor(model => model.BlogUserPassword, new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.BlogUserPassword)
                @Html.ValidationMessageFor(model => model.BlogUserPassword)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BirthDate, new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.BirthDate)
                @Html.ValidationMessageFor(model => model.BirthDate)
            </div>
        </div>

        @Html.HiddenFor(model => model.RegistrationTime)

        <div class="form-group">
            @Html.LabelFor(model => model.BlogUserEpigraph, new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.TextAreaFor(model => model.BlogUserEpigraph, new { @class = "col-md-10" })
                @Html.ValidationMessageFor(model => model.BlogUserEpigraph)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Email)
                @Html.ValidationMessageFor(model => model.Email)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Skype, new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Skype)
                @Html.ValidationMessageFor(model => model.Skype)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.About, new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.TextAreaFor(model => model.About, new { @class = "col-md-10" })
                @Html.ValidationMessageFor(model => model.About)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.RadioButtonFor(model => model.Gender, true, true) Мужской
                @Html.RadioButtonFor(model => model.Gender, false, false) Женский
                @Html.ValidationMessageFor(model => model.Gender)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-8">
                <input type="submit" value="Принять изменения" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.Action("UploadImage", "User", new { id = Model.ID })
</div>

@section scripts {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}